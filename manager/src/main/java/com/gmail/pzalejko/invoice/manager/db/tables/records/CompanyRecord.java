/*
 * This file is generated by jOOQ.
 */
package com.gmail.pzalejko.invoice.manager.db.tables.records;


import com.gmail.pzalejko.invoice.manager.db.tables.Company;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CompanyRecord extends UpdatableRecordImpl<CompanyRecord> implements Record5<Integer, String, String, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.company.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.company.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.company.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.company.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.company.taxid</code>.
     */
    public void setTaxid(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.company.taxid</code>.
     */
    public String getTaxid() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.company.account_number</code>.
     */
    public void setAccountNumber(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.company.account_number</code>.
     */
    public String getAccountNumber() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.company.address_id</code>.
     */
    public void setAddressId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.company.address_id</code>.
     */
    public Integer getAddressId() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, String, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, String, String, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Company.COMPANY.ID;
    }

    @Override
    public Field<String> field2() {
        return Company.COMPANY.NAME;
    }

    @Override
    public Field<String> field3() {
        return Company.COMPANY.TAXID;
    }

    @Override
    public Field<String> field4() {
        return Company.COMPANY.ACCOUNT_NUMBER;
    }

    @Override
    public Field<Integer> field5() {
        return Company.COMPANY.ADDRESS_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getTaxid();
    }

    @Override
    public String component4() {
        return getAccountNumber();
    }

    @Override
    public Integer component5() {
        return getAddressId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getTaxid();
    }

    @Override
    public String value4() {
        return getAccountNumber();
    }

    @Override
    public Integer value5() {
        return getAddressId();
    }

    @Override
    public CompanyRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public CompanyRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public CompanyRecord value3(String value) {
        setTaxid(value);
        return this;
    }

    @Override
    public CompanyRecord value4(String value) {
        setAccountNumber(value);
        return this;
    }

    @Override
    public CompanyRecord value5(Integer value) {
        setAddressId(value);
        return this;
    }

    @Override
    public CompanyRecord values(Integer value1, String value2, String value3, String value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CompanyRecord
     */
    public CompanyRecord() {
        super(Company.COMPANY);
    }

    /**
     * Create a detached, initialised CompanyRecord
     */
    public CompanyRecord(Integer id, String name, String taxid, String accountNumber, Integer addressId) {
        super(Company.COMPANY);

        setId(id);
        setName(name);
        setTaxid(taxid);
        setAccountNumber(accountNumber);
        setAddressId(addressId);
    }
}
