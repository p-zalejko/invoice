/*
 * This file is generated by jOOQ.
 */
package com.gmail.pzalejko.invoice.manager.db;


import com.gmail.pzalejko.invoice.manager.db.tables.Company;
import com.gmail.pzalejko.invoice.manager.db.tables.CompanyAddress;
import com.gmail.pzalejko.invoice.manager.db.tables.FlywaySchemaHistory;
import com.gmail.pzalejko.invoice.manager.db.tables.Invoice;
import com.gmail.pzalejko.invoice.manager.db.tables.Invoiceitem;
import com.gmail.pzalejko.invoice.manager.db.tables.Item;
import com.gmail.pzalejko.invoice.manager.db.tables.records.CompanyAddressRecord;
import com.gmail.pzalejko.invoice.manager.db.tables.records.CompanyRecord;
import com.gmail.pzalejko.invoice.manager.db.tables.records.FlywaySchemaHistoryRecord;
import com.gmail.pzalejko.invoice.manager.db.tables.records.InvoiceRecord;
import com.gmail.pzalejko.invoice.manager.db.tables.records.InvoiceitemRecord;
import com.gmail.pzalejko.invoice.manager.db.tables.records.ItemRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CompanyRecord> COMPANY_ACCOUNT_NUMBER_KEY = Internal.createUniqueKey(Company.COMPANY, DSL.name("company_account_number_key"), new TableField[] { Company.COMPANY.ACCOUNT_NUMBER }, true);
    public static final UniqueKey<CompanyRecord> COMPANY_PKEY = Internal.createUniqueKey(Company.COMPANY, DSL.name("company_pkey"), new TableField[] { Company.COMPANY.ID }, true);
    public static final UniqueKey<CompanyRecord> COMPANY_TAXID_KEY = Internal.createUniqueKey(Company.COMPANY, DSL.name("company_taxid_key"), new TableField[] { Company.COMPANY.TAXID }, true);
    public static final UniqueKey<CompanyAddressRecord> COMPANY_ADDRESS_PKEY = Internal.createUniqueKey(CompanyAddress.COMPANY_ADDRESS, DSL.name("company_address_pkey"), new TableField[] { CompanyAddress.COMPANY_ADDRESS.ID }, true);
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<InvoiceRecord> INVOICE_NUMBER_KEY = Internal.createUniqueKey(Invoice.INVOICE, DSL.name("invoice_number_key"), new TableField[] { Invoice.INVOICE.NUMBER }, true);
    public static final UniqueKey<InvoiceRecord> INVOICE_PKEY = Internal.createUniqueKey(Invoice.INVOICE, DSL.name("invoice_pkey"), new TableField[] { Invoice.INVOICE.ID }, true);
    public static final UniqueKey<InvoiceitemRecord> INVOICEITEM_PKEY = Internal.createUniqueKey(Invoiceitem.INVOICEITEM, DSL.name("invoiceitem_pkey"), new TableField[] { Invoiceitem.INVOICEITEM.ID }, true);
    public static final UniqueKey<ItemRecord> ITEM_PKEY = Internal.createUniqueKey(Item.ITEM, DSL.name("item_pkey"), new TableField[] { Item.ITEM.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CompanyRecord, CompanyAddressRecord> COMPANY__COMPANY_ADDRESS_ID_FKEY = Internal.createForeignKey(Company.COMPANY, DSL.name("company_address_id_fkey"), new TableField[] { Company.COMPANY.ADDRESS_ID }, Keys.COMPANY_ADDRESS_PKEY, new TableField[] { CompanyAddress.COMPANY_ADDRESS.ID }, true);
    public static final ForeignKey<InvoiceRecord, CompanyRecord> INVOICE__INVOICE_COMPANY_BILLTO_ID_FKEY = Internal.createForeignKey(Invoice.INVOICE, DSL.name("invoice_company_billto_id_fkey"), new TableField[] { Invoice.INVOICE.COMPANY_BILLTO_ID }, Keys.COMPANY_PKEY, new TableField[] { Company.COMPANY.ID }, true);
    public static final ForeignKey<InvoiceRecord, CompanyRecord> INVOICE__INVOICE_COMPANY_FROM_ID_FKEY = Internal.createForeignKey(Invoice.INVOICE, DSL.name("invoice_company_from_id_fkey"), new TableField[] { Invoice.INVOICE.COMPANY_FROM_ID }, Keys.COMPANY_PKEY, new TableField[] { Company.COMPANY.ID }, true);
    public static final ForeignKey<InvoiceitemRecord, InvoiceRecord> INVOICEITEM__INVOICEITEM_INVOICE_ID_FKEY = Internal.createForeignKey(Invoiceitem.INVOICEITEM, DSL.name("invoiceitem_invoice_id_fkey"), new TableField[] { Invoiceitem.INVOICEITEM.INVOICE_ID }, Keys.INVOICE_PKEY, new TableField[] { Invoice.INVOICE.ID }, true);
    public static final ForeignKey<InvoiceitemRecord, ItemRecord> INVOICEITEM__INVOICEITEM_ITEM_ID_FKEY = Internal.createForeignKey(Invoiceitem.INVOICEITEM, DSL.name("invoiceitem_item_id_fkey"), new TableField[] { Invoiceitem.INVOICEITEM.ITEM_ID }, Keys.ITEM_PKEY, new TableField[] { Item.ITEM.ID }, true);
}
